--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_compare 2013:04:24:18:08:47:SJ cbx_lpm_decode 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode9362w[1..0]	: WIRE;
	w_anode9371w[3..0]	: WIRE;
	w_anode9388w[3..0]	: WIRE;
	w_anode9398w[3..0]	: WIRE;
	w_anode9408w[3..0]	: WIRE;
	w_anode9418w[3..0]	: WIRE;
	w_anode9428w[3..0]	: WIRE;
	w_anode9438w[3..0]	: WIRE;
	w_anode9448w[3..0]	: WIRE;
	w_anode9460w[1..0]	: WIRE;
	w_anode9467w[3..0]	: WIRE;
	w_anode9478w[3..0]	: WIRE;
	w_anode9488w[3..0]	: WIRE;
	w_anode9498w[3..0]	: WIRE;
	w_anode9508w[3..0]	: WIRE;
	w_anode9518w[3..0]	: WIRE;
	w_anode9528w[3..0]	: WIRE;
	w_anode9538w[3..0]	: WIRE;
	w_data9360w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode9538w[3..3], w_anode9528w[3..3], w_anode9518w[3..3], w_anode9508w[3..3], w_anode9498w[3..3], w_anode9488w[3..3], w_anode9478w[3..3], w_anode9467w[3..3]), ( w_anode9448w[3..3], w_anode9438w[3..3], w_anode9428w[3..3], w_anode9418w[3..3], w_anode9408w[3..3], w_anode9398w[3..3], w_anode9388w[3..3], w_anode9371w[3..3]));
	w_anode9362w[] = ( (w_anode9362w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode9371w[] = ( (w_anode9371w[2..2] & (! w_data9360w[2..2])), (w_anode9371w[1..1] & (! w_data9360w[1..1])), (w_anode9371w[0..0] & (! w_data9360w[0..0])), w_anode9362w[1..1]);
	w_anode9388w[] = ( (w_anode9388w[2..2] & (! w_data9360w[2..2])), (w_anode9388w[1..1] & (! w_data9360w[1..1])), (w_anode9388w[0..0] & w_data9360w[0..0]), w_anode9362w[1..1]);
	w_anode9398w[] = ( (w_anode9398w[2..2] & (! w_data9360w[2..2])), (w_anode9398w[1..1] & w_data9360w[1..1]), (w_anode9398w[0..0] & (! w_data9360w[0..0])), w_anode9362w[1..1]);
	w_anode9408w[] = ( (w_anode9408w[2..2] & (! w_data9360w[2..2])), (w_anode9408w[1..1] & w_data9360w[1..1]), (w_anode9408w[0..0] & w_data9360w[0..0]), w_anode9362w[1..1]);
	w_anode9418w[] = ( (w_anode9418w[2..2] & w_data9360w[2..2]), (w_anode9418w[1..1] & (! w_data9360w[1..1])), (w_anode9418w[0..0] & (! w_data9360w[0..0])), w_anode9362w[1..1]);
	w_anode9428w[] = ( (w_anode9428w[2..2] & w_data9360w[2..2]), (w_anode9428w[1..1] & (! w_data9360w[1..1])), (w_anode9428w[0..0] & w_data9360w[0..0]), w_anode9362w[1..1]);
	w_anode9438w[] = ( (w_anode9438w[2..2] & w_data9360w[2..2]), (w_anode9438w[1..1] & w_data9360w[1..1]), (w_anode9438w[0..0] & (! w_data9360w[0..0])), w_anode9362w[1..1]);
	w_anode9448w[] = ( (w_anode9448w[2..2] & w_data9360w[2..2]), (w_anode9448w[1..1] & w_data9360w[1..1]), (w_anode9448w[0..0] & w_data9360w[0..0]), w_anode9362w[1..1]);
	w_anode9460w[] = ( (w_anode9460w[0..0] & data_wire[3..3]), enable_wire);
	w_anode9467w[] = ( (w_anode9467w[2..2] & (! w_data9360w[2..2])), (w_anode9467w[1..1] & (! w_data9360w[1..1])), (w_anode9467w[0..0] & (! w_data9360w[0..0])), w_anode9460w[1..1]);
	w_anode9478w[] = ( (w_anode9478w[2..2] & (! w_data9360w[2..2])), (w_anode9478w[1..1] & (! w_data9360w[1..1])), (w_anode9478w[0..0] & w_data9360w[0..0]), w_anode9460w[1..1]);
	w_anode9488w[] = ( (w_anode9488w[2..2] & (! w_data9360w[2..2])), (w_anode9488w[1..1] & w_data9360w[1..1]), (w_anode9488w[0..0] & (! w_data9360w[0..0])), w_anode9460w[1..1]);
	w_anode9498w[] = ( (w_anode9498w[2..2] & (! w_data9360w[2..2])), (w_anode9498w[1..1] & w_data9360w[1..1]), (w_anode9498w[0..0] & w_data9360w[0..0]), w_anode9460w[1..1]);
	w_anode9508w[] = ( (w_anode9508w[2..2] & w_data9360w[2..2]), (w_anode9508w[1..1] & (! w_data9360w[1..1])), (w_anode9508w[0..0] & (! w_data9360w[0..0])), w_anode9460w[1..1]);
	w_anode9518w[] = ( (w_anode9518w[2..2] & w_data9360w[2..2]), (w_anode9518w[1..1] & (! w_data9360w[1..1])), (w_anode9518w[0..0] & w_data9360w[0..0]), w_anode9460w[1..1]);
	w_anode9528w[] = ( (w_anode9528w[2..2] & w_data9360w[2..2]), (w_anode9528w[1..1] & w_data9360w[1..1]), (w_anode9528w[0..0] & (! w_data9360w[0..0])), w_anode9460w[1..1]);
	w_anode9538w[] = ( (w_anode9538w[2..2] & w_data9360w[2..2]), (w_anode9538w[1..1] & w_data9360w[1..1]), (w_anode9538w[0..0] & w_data9360w[0..0]), w_anode9460w[1..1]);
	w_data9360w[2..0] = data_wire[2..0];
END;
--VALID FILE
